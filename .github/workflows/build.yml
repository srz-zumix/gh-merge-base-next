name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    permissions:
      contents: read
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build ./...

      - name: Install test dependencies
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Run all tests with coverage
        run: |
          mkdir -p test-results
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./... 2>&1 | tee test-output.txt
          go-junit-report -in test-output.txt -out test-results/junit.xml
          go tool cover -html=coverage.out -o test-results/coverage.html

      - name: Upload test results
        uses: actions/upload-artifact@v5
        if: success() || failure()
        with:
          name: test-results
          path: test-results/

      - name: Run Octocov
        uses: k1LoW/octocov-action@73d561f65d59e66899ed5c87e4621a913b5d5c20 # v1.5.0
        if: success() || failure()

      - name: Publish test results
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3 # v2.1.1
        if: success() || failure()
        with:
          name: Go Tests Results
          path: 'test-results/*.xml'
          reporter: java-junit
          fail-on-error: false

      - name: Generate test summary
        if: success() || failure()
        run: |
          echo "## Test Results 📊" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage.out ]; then
            coverage=$(go tool cover -func=coverage.out | tail -1 | awk '{print $3}')
            echo "**Coverage**: $coverage" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### Test Artifacts 📁" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage Report: \`test-results/coverage.html\`" >> $GITHUB_STEP_SUMMARY
          echo "- JUnit Report: \`test-results/junit.xml\`" >> $GITHUB_STEP_SUMMARY
